short name of method 	full name of method 	equation 	parameters 
Antoine 	Antoine vapor pressure equation 	log(p) = a - b/(T+c) 	a, b, c 
Wrede 	Wrede vapor pressure equation 	log(p) = a - b/T 	a, b 
Wrede-ln 	Wrede vapor pressure equation 	ln(p) = a - b/T 	a, b 
Cragoe 	Cragoe vapor pressure equation 	log(p) = a + b/T + c*T + d*T2 	a, b, c, d 
Riedel 	Riedel vapor pressure equation 	ln(p) = a - b/T + c*T + d*T2 + e*ln(T) 	a, b, c, d, e 
Wagner 	Wagner vapor pressure equation 	"ln(p/pcrit) = (a*x + b*x(3/2) + c*x3 + d*x6)/(T/Tcrit); x = 1 - T/Tcrit "	a, b, c, d, criticalPressure, criticalTemperature 
Wagner2 	2nd Wagner vapor pressure equation 	"ln(p/pcrit) = (a*x + b*x(3/2) + c*x3 + d*x7 + e*x9)/(T/Tcrit); x = 1 - T/Tcrit "	a, b, c, d, e, criticalPressure, criticalTemperature 
Wagner3 	Wagner vapor pressure equation (Aspen) 	"ln(p/pcrit) = (a*x + b*x(3/2) + c*x3 + d*x4)/(T/Tcrit); x = 1 - T/Tcrit "	a, b, c, d, criticalPressure, criticalTemperature 
Chebyshev 	Chebyshev vapor pressure equation 	"T*log(p) = c0/2 + ?(s)[cs * Es(x)]; x = 2*T - (Tmax+Tmin)/(Tmax-Tmin); Es(x) = Chebyshev polynomial of order s "	c_0, c_1, c_2, ....., T_min, T_max 
polynomial 	polynomial 	y = a + b*x + c*x2 + ...+ j*x9 x = any property 	a, b, c, d, e, f, g, h, i, j 
vapor pressure_1 	vapor pressure equation 	ln(p) = a + b*T + c/T + d/T2 	a, b, c, d 
mod.Antoine( Hysys) 	modified Antoine vapor pressure equation (Hysys[9], page A-36) 	ln(p) = A + B/(T+C) + D*T + E*ln(T) + F*TG 	A, B, C, D, E, F, G 
mod.Antoine( Aspen) 	modified Antoine vapor pressure equation (Aspen[7], page 3-80) 	ln(p) = A + B/(T+C) + D*ln(T) + E*TF 	A, B, C, D, E, F 
Jones-Dole 	Jones-Dole equation 	?/?0 = 1 + a*vc + b*c 	a, b, viscosity_0 
Yen-Woods 	Yen-Woods equation for densities 	d = dcrit * (a + ?(j)(kj)*(1T/Tcrit)(j/3)) 	criticalDensity, criticalTemperature, a, k_0, k_1, k_2, ... 
Antoine viscosity 	Antoine equation for the viscosity 	ln(?) = a + b/(T+c) 	a, b, c 
Riedel therm.cond. 	Riedel equation for thermal conductivities 	? = a * (1 + (20/3)*(1 - T/Tcrit)(2/3)) 	a, criticalTemperature 
Sprow/Prausni tz 	Surface Tension after Sprow and Prausnitz 	s = a * (1 - T/Tcrit)b 	a, b, criticalTemperature 
modified polynomial 	modified polynomial 	property = a + b/T + c/T2 + d*T + e*T2 + f*T3 + ... 	a, b, c, d, e, f, ... 
Yuan/Mok 	Yuan - Mok equation for the heat capacity 	cp = a + b * exp(-c/Tn) 	a, b, c, n 
Redlich-Kister 	Redlich-Kister equation for excess properties in binary systems 	? property = x1 * x2 * S(i)(ai*(x1x2)i) 	a_0, a_1, a_2, a_3, ... 
thermal conductivity (NEL) 	NEL equation for thermal conductivity 	"? = a*(1 + b*x(1/3) + c*x(2/3) + d*x); x=1-T/Tcrit "	a, b, c, d, criticalTemperature 
virial equation 	virial equation 	Z = 1 + vc2*p + vc3*p2 + vc4*p4 + ... 	vc_2, vc_3, vc_4 
BWR 	BWR-equation of state 	p = R*T*d + (b0*R*T -a0 c0/T2)*d2 + (b0*R*T - a0)*d3 +a*a*d6 + (c*d3/T2)*(1 + ?*d2)*exp(-?*d2) 	a_0, b_0, c_0, a, b, c, alpha, gamma 
BWR-Lee-Starling 	Benedict-Webb-Rubin-Lee-Starling equation of state (Aspen[7], page 3-8) 	"Zm = Zm0 + ?i*Zm1; Zm0, Zm1 =function(T,Tcrit,vm,vcrit,m) "	criticalTemperature _i, criticalVolume_i, gamma_i, epsilon_i_j, eta_i_j 
Hayden-O'Connel 	Hayden-O'Connel equation of state (Aspen[7], page 3-9) 	"Zm = 1 + B*p/R*T; B = S(i)S(j)Bij(T) "	B_i_j 
Lee-Kesler 	Lee-Kesler equation of state (Aspen[7], page 3-18) 	Z = Z0 + (Zr-Z0)*?/?r Z0 = fct0(T/Tcrit, p/prit) Zr  = fctr(T/Tcrit, p/pcrit) 	criticalTemperature, criticalPressure, omega 
Lee-Kesler-Plöcker 	Lee-Kesler-Plöcker equation of state (Aspen[7], page 3-19) 	"Zm = Zm0 + (?/?r)*(Zm0 - Zmr) ; Zm0 = fct0(T,Tcrit, vm, vcrit,m); Zmr = fctf(T,Tcrit,vm,vcrit,m) mixing rules for vcrit,m, Tcrit "	criticalTemperature, criticalPressure, vcriticalVolume, omega, Z_c_i, K_i_j 
Peng-Robinson-Boston-Mathias 	Peng-Robinson-Boston-Mathias equation of state (Aspen[7], page 325) 		
p = R*T/(vm-b) a/[vm*(vm+b)+b*(vm-b)] 	criticalTemperature_i, criticalPressure_i, omega_i, k_1_2 		
Redlich-Kwong 	Redlich-Kwong equation of state (Aspen[7], page 3-27) 	p = R*T/(vm-b) (a/v(T))/[vm*(vm+b)] 	criticalTemperature_i, criticalPressure_i 
Redlich-Kwong-Aspen 	Aspen modification of the Redlich-Kwong equation of state( Aspen[7], page 3-28) 	p = R*T/(vm-b) - a/[vm*(vm+b)] with mixing rules 	criticalTemperature_i, criticalPressure_i, omega_i, eta_i,k_0_a__i_j, k_1_a_i_j, k_0_D_i_j, k_1_D_i_j, 
Redlich-Kwong-Soave-Boston-Mathias 	Redlich-Kwong equation of state with Boston-Mathias alpha function (Aspen[7], page 3-29) 	p = R*T/(vm-b) - a/[vm*(vm+b)] with mixing rules 	criticalTemperature_i, criticalPressure_i, omega_i, k_i_j 
Schwartzentru ber-Renon 	Schwartzentruber-Renon equation of state (Aspen[7], page 3-31) 	p = R*T/(Vm+c-b) a/[(vm+c)*(Vm+c+b)] with mixing rules 	criticalTemperature_i, criticalPressure_i, omega_i, q_0_i, q_1_i, q_2_i, c_0_i, c_1_i, c_2_i, k_0_a_i-j, k_1_a_i_j, k_2_a_i_j, l_0_i_j, l_1_i_j, l_2_i_j, k_0_D_i_j, k_1_D_i_j, k_2_D_i_j 
Peng-Robinson 	standard Peng-Robinson equation of state (Aspen[7], page 3-34) 	p = R*T/(vm-b) a/[vm*(vm+b)+b*(vm-b)] 	criticalTemperature_i, criticalPressure_i, omega_i (i=1..2), k_1_2 
Redlich-Kwong-Soave 	standard Redlich-Kwong-Soave equation of state (Aspen[7], page 335) 		
p = R*T/(vm-b) - a/[vm*(vm+b)] with mixing rules 	criticalTemperature_i, criticalPressure_i, omega_i, k_i_j 		
Bromley-Pitzer 	Bromley-Pitzer activity coefficient model (Aspen[7], page 3-54) 		beta_ion, delta_ion, beta_0, beta_1, beta_2, beta_3 
Chien-Null 	Chien-Null model for calculation activity coefficient of highly non-ideal systems (Aspen[7], page 3-55) 		a_i_j, b_i_j, v_i_j 
Electrolyte-NRTL 	NRTL activity coefficient model for electrolytes(Aspen[7], page 358) 		A_B, B_B, C_B, r_i, A_BB, A_BsB, B_BBs, B_BsB, alpha_BB, F_BBs, F_BsB, G_BBs, G_BsB, C_ca_B, C_B_ca, D_ca_B, D_B_ca, E_ca_B, E_B-ca, alpha_ca_B, C_cas_cass, C_cass-cas, c_csa,cssa, C_cssa_csa, D_cas_cass,D_cass_cas, D_csa_cssa, D_cssa_csa, E_cas_cass, E_cass_cas,E_csa_cssa, E_cssa_csa, alpha_cas_cass, alpha_csa_cssa 
NRTL 	NRTL activity coefficient model (DDB[8], page XVI) 		A_i_j, A_j_i, alpha (i,j=1...2) 
extended NRTL (Aspen) 	NRTL activity coefficient model (Aspen[7], page 3-62) 		a_i_j, b_i_j, c_i_j, d_i_j, e_i_j, f_i_j (i,j=1...2) 
general NRTL 	general NRTL activity coefficient model (Hysys[9], page A-22) 		form-of_equation, A_j_j, B_i_j, C_i_j, F_i_j, G_i_j, alpha1_i_j, alpha2_i_j (i,j=1...2) 
Pitzer activity 	Pitzer model for activity 		beta_0, beta_1, beta_2, 
coefficient model 	coefficients of aqueous systems (Aspen [7], page 3-63) 		beta_3, C_p, theta_c_cs, theta_a_as, psi_c_cs_a, psi_c_a_as 
Redlich-Kister 	Redlich-Kister model for calculating activity coefficients (Aspen[7], page 3-66) 		a_i_j, b_i_j, c_i_j, d_i_j, e_i_j, f_i_j, g_i_j, h_i_j, m_i_j, n_i_j, v_i 
Scatchard-Hildebrand 	Scatchard-Hildebrand model (Aspen[7], page 3-67) 		criticalTemperature-i, delta_i, V_i_CVT, V_i_l 
Margules 	Margules equation for calculating liquid activity coefficients (DDB[8], page XVI) 	ln(?i) = [Aij + 2*(Aji-Aij)*xi](1-xi)2 	A_i_j 
extended Margules 	Margules equation for calculating liquid activity coefficients with temperature-independent parameters (Hysys[9], page A-24) 	"ln(?i) = (1-xi)*+2*[Ai + 2+xi*(Bi-Ai)]; Ai = S(j)[xj*(aij+bij*T)/(1-xi)]; Bi = S(j)[xj*(aji+bji*T)/(1-xi)] "	a_i_j, b_i_j (i,j=1...2) 
three-suffix Margules 	extended Margules equation for calculating liquid activity coefficients (Aspen[7], page 3-68) 		a_i_j, b_i_j, c_i_j, d_i_j (i,j=1...2) 
van Laar 	van Laar equation for calculating liquid activity coefficients (DDB[8], page XVI) 		A_i_j (i,j=1...2) 
extended van Laar (Aspen) 	extended van Laar equation for calculating liquid activity coefficients with temperature-independent parameters (Aspen[7], page 3-75) 		a_i_j, b_i_j, c_i_j, d_i_j (i,j=1...2) 
extended van Laar (Hysys) 	extended van Laar equation for calculating liquid activity coefficients with temperature-independent parameters (Hysys[9], page A-28) 		a_i_j, b_i_j (i,j=1...2) 
Wilson 	Wilson equation for calculating liquid activity coefficients (DDB[8], page XVI) 		A_i_j (i,j=1...2) 
extended Wilson (Aspen) 	extended Wilson equation for calculating liquid activity (Aspen[7], page 3-78) 		a_i_j, b_i_j, c_i_j, d_i_j (i,j=1...2) 
extended Wilson (Hysys) 	extended Wilson equation for calculating liquid activity coefficients with temperature-independent parameters (Hysys[9], page A-29) 		a_i_j, b_i_j (i,j=1...2) 
UNIQUAC 	UNIQUAC equation for calculating liquid activity coefficients (DDB[8], page XVII) 		u_i_j (i,j=1...2) 
extended UNIQUAC (Aspen) 	extended UNIQUAC equation for calculating liquid activity coefficients with temperature-independent parameters (Aspen[7], page 3-74) 		a_i_j, b_i_j, c_i_j, d_i_j (i,j=1...2) 
extended UNIQUAC (Hysys) 	extended UNIQUAC equation for calculating liquid activity coefficients with temperature-independent parameters (Hysys[9], page A-26) 		a_i_j, b_i_j (i,j=1...2) 
DIPPR107 	DIPPR equation for the ideal heat capacity 	property = A + B[C/T/sinh(C/T)]2 + D[E/T/cosh(E/T)]2 	A, B, C, D, E 
heat capacity (ASPEN) 	Aspen[7]-equation for the solid heat capacity (page 3-102) 	Cp = c1 + c2*T + c3*T2 + c4/T + c5/T2 + c6/v(T) 	c1, c2, c3, c4, c5, c6 
Barin 	Barin equations for thermophysical property data 	G = a + b*T + c*(T*ln(T)) + d*T2 + e*T3 + f*T4 + g/T + h/T2 	a, b, c, d, e,f, g, h 
Andrade 	Andrade equation for calculating the liquid viscosity 	ln(?) = A + B/T + C*ln(T) 	A, B, C 
liquid viscosity (DIPPR) 	DIPPR equation for the liquid viscosity 	ln(?) = c1 + c2/T + c3*ln(T) + c4*Tc5 	c1, c2, c3, c4, c5 
viscosity mixing rule 	ASPEN[7] mixing rule for the liquid viscosity (listed under the heading Andrade/DIPPR, page 3122) 	ln(?) = S(i)[x_i*ln(?i)] + S(i,j)[(aij + bij/T)*xi*xj + (cij+dij/T)*xi 2*xj 2] 	a_i_j, b_i_j, c_i_j, d_i_j 
DIPPR102 	DIPPR equation for the gas viscosity at 0 atm pressure and the gas thermal conductivity 	property = A*TB/(1 + C/T + D/T2) 	A, B, C, D 
Chung-Lee-Starling 	Chung-Lee-Starling correlation of the viscosity and thermal conductivity of liquid or gaseous mixtures  (Aspen[7], page 3-127, 3138)) 		
suface tension (DIPPR) 	DIPPR correlation for surface tension 	"s = c1*(1-Tr)^(c2 + c3*Tr + c4*Tr 2 + c5*Tr 3); Tr = T/Tcrit "	c1, c2, c3, c4, c5, criticalTemperature 
Hakim-Steinberg-Stiel 	Hakim-Steinberg-Stiel equation for the surface tension (Aspen[7], page 3-155) 		chi 
DIPPR105 		property = A/B^[1+(1-T/C)D] 	A, B, C, D 
DIPPR101 		property = exp(A + B/T + C*ln(T) + D*TE) 	A, B, C, D, E 
DIPPR106 		"property = A*(1-Tr)^(B + C*Tr + D*Tr 2); Tr = T/Tcrrit "	A,B,C,D, criticalTemperature 
DIPPR104 		property = A + B/T + C/T3 + D/T8 + E/T9 	A, B, C, D, E 
